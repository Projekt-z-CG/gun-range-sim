//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Walking"",
            ""id"": ""17733172-d79c-4334-8e03-e0e38f98c82e"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""f472c7d2-ad14-4b8f-823d-fa83acf9a064"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""4a1b77cc-7367-4376-b6b9-20a64120da73"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""15be70f4-c091-49fb-8dbf-97a26411f563"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""cb69e0d4-45c4-4769-9acd-9f1adf1f599e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""a1b96d2c-ccd1-42c8-8ab3-36628685b4af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""fdc2d349-ac8f-4088-8c5f-31c034eccdc1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""35ea6e08-fd5c-401d-b0f2-2983299f3b58"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleFireRate"",
                    ""type"": ""Button"",
                    ""id"": ""80187828-8e57-4d9c-bdef-c4def05a7bc5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ADS"",
                    ""type"": ""Button"",
                    ""id"": ""b5cfd473-da41-43ef-81b0-700e8e4af41a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gun1"",
                    ""type"": ""Button"",
                    ""id"": ""80e19f0a-55c0-4bab-af54-959f3031acc2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gun2"",
                    ""type"": ""Button"",
                    ""id"": ""b4cb75f4-b6e5-4bb7-92e4-b1e809fe86ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gun3"",
                    ""type"": ""Button"",
                    ""id"": ""cda38a76-7be4-4a9d-be7f-9a94ddb9b96f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gun4"",
                    ""type"": ""Button"",
                    ""id"": ""02b37359-20ed-4630-aa13-2583235805bf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""16c69e89-977d-4a5f-9fcd-5a26b8f06853"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1ebba666-c8c2-4583-85fe-2fa2df2ab2a6"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""882d3563-7328-4b85-a798-928805cd2bdc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""73f985bc-9ebc-4778-a649-ba39d4edab53"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d1f1fb6b-f6d9-4eee-b9cb-30630ec35e7d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a5e5e303-b047-4726-9c37-77992e0b7b71"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df7b86e6-e768-4469-acaf-8eeaad1fa6eb"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1ccfa46-213d-452c-8a69-757c9a0d7e9c"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9740637-b8b1-45a0-a88a-d04c6f1339d2"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35db995e-dfd6-4111-b329-4312dc68939b"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c97e76f-7d02-4f9f-a92b-bb5117909dcf"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0298bfa9-563b-40ef-955c-a732578ef9f6"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8a7e6d7-5037-477b-87f4-ed516e1fd959"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleFireRate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a43a0a7-47b6-46bd-a35c-8321e73f2aa7"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ADS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e67e3be6-2ecb-4828-9afc-ba3522d0b587"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Gun1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5297c98f-9af0-44d3-8b70-e346e3584a92"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Gun2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9b9bba2-37c6-4b65-ad88-61c636ea46b4"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Gun3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1eb5881-9463-477a-857e-d9c97f032d98"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Gun4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Walking
        m_Walking = asset.FindActionMap("Walking", throwIfNotFound: true);
        m_Walking_Movement = m_Walking.FindAction("Movement", throwIfNotFound: true);
        m_Walking_Jump = m_Walking.FindAction("Jump", throwIfNotFound: true);
        m_Walking_Look = m_Walking.FindAction("Look", throwIfNotFound: true);
        m_Walking_Crouch = m_Walking.FindAction("Crouch", throwIfNotFound: true);
        m_Walking_Sprint = m_Walking.FindAction("Sprint", throwIfNotFound: true);
        m_Walking_Shoot = m_Walking.FindAction("Shoot", throwIfNotFound: true);
        m_Walking_Reload = m_Walking.FindAction("Reload", throwIfNotFound: true);
        m_Walking_ToggleFireRate = m_Walking.FindAction("ToggleFireRate", throwIfNotFound: true);
        m_Walking_ADS = m_Walking.FindAction("ADS", throwIfNotFound: true);
        m_Walking_Gun1 = m_Walking.FindAction("Gun1", throwIfNotFound: true);
        m_Walking_Gun2 = m_Walking.FindAction("Gun2", throwIfNotFound: true);
        m_Walking_Gun3 = m_Walking.FindAction("Gun3", throwIfNotFound: true);
        m_Walking_Gun4 = m_Walking.FindAction("Gun4", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Walking
    private readonly InputActionMap m_Walking;
    private IWalkingActions m_WalkingActionsCallbackInterface;
    private readonly InputAction m_Walking_Movement;
    private readonly InputAction m_Walking_Jump;
    private readonly InputAction m_Walking_Look;
    private readonly InputAction m_Walking_Crouch;
    private readonly InputAction m_Walking_Sprint;
    private readonly InputAction m_Walking_Shoot;
    private readonly InputAction m_Walking_Reload;
    private readonly InputAction m_Walking_ToggleFireRate;
    private readonly InputAction m_Walking_ADS;
    private readonly InputAction m_Walking_Gun1;
    private readonly InputAction m_Walking_Gun2;
    private readonly InputAction m_Walking_Gun3;
    private readonly InputAction m_Walking_Gun4;
    public struct WalkingActions
    {
        private @PlayerInput m_Wrapper;
        public WalkingActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Walking_Movement;
        public InputAction @Jump => m_Wrapper.m_Walking_Jump;
        public InputAction @Look => m_Wrapper.m_Walking_Look;
        public InputAction @Crouch => m_Wrapper.m_Walking_Crouch;
        public InputAction @Sprint => m_Wrapper.m_Walking_Sprint;
        public InputAction @Shoot => m_Wrapper.m_Walking_Shoot;
        public InputAction @Reload => m_Wrapper.m_Walking_Reload;
        public InputAction @ToggleFireRate => m_Wrapper.m_Walking_ToggleFireRate;
        public InputAction @ADS => m_Wrapper.m_Walking_ADS;
        public InputAction @Gun1 => m_Wrapper.m_Walking_Gun1;
        public InputAction @Gun2 => m_Wrapper.m_Walking_Gun2;
        public InputAction @Gun3 => m_Wrapper.m_Walking_Gun3;
        public InputAction @Gun4 => m_Wrapper.m_Walking_Gun4;
        public InputActionMap Get() { return m_Wrapper.m_Walking; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WalkingActions set) { return set.Get(); }
        public void SetCallbacks(IWalkingActions instance)
        {
            if (m_Wrapper.m_WalkingActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnJump;
                @Look.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnLook;
                @Crouch.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnCrouch;
                @Sprint.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnSprint;
                @Shoot.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnShoot;
                @Reload.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnReload;
                @ToggleFireRate.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnToggleFireRate;
                @ToggleFireRate.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnToggleFireRate;
                @ToggleFireRate.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnToggleFireRate;
                @ADS.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnADS;
                @ADS.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnADS;
                @ADS.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnADS;
                @Gun1.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnGun1;
                @Gun1.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnGun1;
                @Gun1.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnGun1;
                @Gun2.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnGun2;
                @Gun2.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnGun2;
                @Gun2.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnGun2;
                @Gun3.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnGun3;
                @Gun3.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnGun3;
                @Gun3.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnGun3;
                @Gun4.started -= m_Wrapper.m_WalkingActionsCallbackInterface.OnGun4;
                @Gun4.performed -= m_Wrapper.m_WalkingActionsCallbackInterface.OnGun4;
                @Gun4.canceled -= m_Wrapper.m_WalkingActionsCallbackInterface.OnGun4;
            }
            m_Wrapper.m_WalkingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @ToggleFireRate.started += instance.OnToggleFireRate;
                @ToggleFireRate.performed += instance.OnToggleFireRate;
                @ToggleFireRate.canceled += instance.OnToggleFireRate;
                @ADS.started += instance.OnADS;
                @ADS.performed += instance.OnADS;
                @ADS.canceled += instance.OnADS;
                @Gun1.started += instance.OnGun1;
                @Gun1.performed += instance.OnGun1;
                @Gun1.canceled += instance.OnGun1;
                @Gun2.started += instance.OnGun2;
                @Gun2.performed += instance.OnGun2;
                @Gun2.canceled += instance.OnGun2;
                @Gun3.started += instance.OnGun3;
                @Gun3.performed += instance.OnGun3;
                @Gun3.canceled += instance.OnGun3;
                @Gun4.started += instance.OnGun4;
                @Gun4.performed += instance.OnGun4;
                @Gun4.canceled += instance.OnGun4;
            }
        }
    }
    public WalkingActions @Walking => new WalkingActions(this);
    public interface IWalkingActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnToggleFireRate(InputAction.CallbackContext context);
        void OnADS(InputAction.CallbackContext context);
        void OnGun1(InputAction.CallbackContext context);
        void OnGun2(InputAction.CallbackContext context);
        void OnGun3(InputAction.CallbackContext context);
        void OnGun4(InputAction.CallbackContext context);
    }
}
